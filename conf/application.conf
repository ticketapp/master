# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret = "`m[lqbYVSyIk?25I3mJ9ABm7JeiRDGFJcsAyNemx0DnGlHhTeniMK7mEQ[0FZDxH"

# The application languages
# ~~~~~
play.i18n.langs = ["fr"]

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
slick.dbs.default.driver="slick.driver.PostgresDriver$"
slick.dbs.default.db.driver="org.postgresql.Driver"
slick.dbs.default.db.url = "jdbc:postgresql://localhost:5432/ticketapp"
slick.dbs.default.db.user = simon
slick.dbs.default.db.password = "root"
slick.dbs.default.db.connectionTimeout = 5 seconds
slick.dbs.default.db.connectionPool = "disabled"


facebook.token = "1434764716814175%7Cf2378aa93c7174712b63a24eff4cb22c"

soundCloud.clientId = "f297807e1780623645f8f858637d4abb"

echonest.apiKey = "3ZYZKU3H3MKR2M59Z"

youtube.key = "AIzaSyDx-k7jA4V-71I90xHOXiILW3HHL0tkBYc"

regex.linkPattern = """((?:(http|https|Http|Https|rtsp|Rtsp):\/\/(?:(?:[a-zA-Z0-9\$\-\_\.\+\!\*\'\(\)\,\;\?\&\=]|(?:\%[a-fA-F0-9]{2})){1,64}(?:\:(?:[a-zA-Z0-9\$\-\_\.\+\!\*\'\(\)\,\;\?\&\=]|(?:\%[a-fA-F0-9]{2})){1,25})?\@)?)?((?:(?:[a-z@A-Z0-9][a-zA-Z0-9\-]{0,64}\.)+(?:(?:aero|arpa|asia|a[cdefgilmnoqrstuwxz])|(?:biz|b[abdefghijmnorstvwyz])|(?:cat|com|coop|c[acdfghiklmnoruvxyz])|d[ejkmoz]|(?:edu|e[cegrstu])|f[ijkmor]|(?:gov|g[abdefghilmnpqrstuwy])|h[kmnrtu]|(?:info|int|i[delmnoqrst])|(?:jobs|j[emop])|k[eghimnrwyz]|l[abcikrstuvy]|(?:mil|mobi|museum|m[acdghklmnopqrstuvwxyz])|(?:name|net|n[acefgilopruz])|(?:org|om)|(?:pro|p[aefghklmnrstwy])|qa|r[eouw]|s[abcdeghijklmnortuvyz]|(?:tel|travel|t[cdfghjklmnoprtvwz])|u[agkmsyz]|v[aceginu]|w[fs]|y[etu]|z[amw]))|(?:(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9])\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9]|0)\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[1-9]|0)\.(?:25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[1-9][0-9]|[0-9])))(?:\:\d{1,5})?)(\/(?:(?:[a-zA-Z0-9\;\/\?\:\@\&\=\#\~\-\.\+\!\*\'\(\)\,\_])|(?:\%[a-fA-F0-9]{2}))*)?(?:\b|$)"""
regex.geographicPointPattern = """(-?\(\d+\.?\d*,-?\d+\.?\d*\))"""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

play.modules.enabled += "modules.SilhouetteModule"

silhouette {

  # Authenticator settings
  authenticator.cookieName="authenticator"
  authenticator.cookiePath="/"
  authenticator.secureCookie=false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  authenticator.httpOnlyCookie=true
  authenticator.useFingerprinting=true
  authenticator.authenticatorIdleTimeout=30 minutes
  authenticator.authenticatorExpiry=12 hours

  authenticator.rememberMe.cookieMaxAge=30 days
  authenticator.rememberMe.authenticatorIdleTimeout=5 days
  authenticator.rememberMe.authenticatorExpiry=30 days

  # OAuth1 token secret provider settings
  oauth1TokenSecretProvider.cookieName="OAuth1TokenSecret"
  oauth1TokenSecretProvider.cookiePath="/"
  oauth1TokenSecretProvider.secureCookie=false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  oauth1TokenSecretProvider.httpOnlyCookie=true
  oauth1TokenSecretProvider.expirationTime=5 minutes

  # OAuth2 state provider settings
  oauth2StateProvider.cookieName="OAuth2State"
  oauth2StateProvider.cookiePath="/"
  oauth2StateProvider.secureCookie=false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  oauth2StateProvider.httpOnlyCookie=true
  oauth2StateProvider.expirationTime=5 minutes

  # Facebook provider
  facebook.authorizationURL="https://graph.facebook.com/v2.3/oauth/authorize"
  facebook.accessTokenURL="https://graph.facebook.com/v2.3/oauth/access_token"
  facebook.redirectURL="http://localhost:9000/authenticate/facebook"
  facebook.clientID=""
  facebook.clientID=${?FACEBOOK_CLIENT_ID}
  facebook.clientSecret=""
  facebook.clientSecret=${?FACEBOOK_CLIENT_SECRET}
  facebook.scope="email"

  # Google provider
  google.authorizationURL="https://accounts.google.com/o/oauth2/auth"
  google.accessTokenURL="https://accounts.google.com/o/oauth2/token"
  google.redirectURL="http://localhost:9000/authenticate/google"
  google.clientID=""
  google.clientID=${?GOOGLE_CLIENT_ID}
  google.clientSecret=""
  google.clientSecret=${?GOOGLE_CLIENT_SECRET}
  google.scope="profile email"

  # VK provider
  vk.authorizationURL="http://oauth.vk.com/authorize"
  vk.accessTokenURL="https://oauth.vk.com/access_token"
  vk.redirectURL="http://localhost:9000/authenticate/vk"
  vk.clientID=""
  vk.clientID=${?VK_CLIENT_ID}
  vk.clientSecret=""
  vk.clientSecret=${?VK_CLIENT_SECRET}
  vk.scope="email"

  # Clef provider
  clef.accessTokenURL="https://clef.io/api/v1/authorize"
  clef.redirectURL="http://localhost:9000/authenticate/clef"
  clef.clientID=""
  clef.clientID=${?CLEF_CLIENT_ID}
  clef.clientSecret=""
  clef.clientSecret=${?CLEF_CLIENT_SECRET}

  # Twitter provider
  twitter.requestTokenURL="https://twitter.com/oauth/request_token"
  twitter.accessTokenURL="https://twitter.com/oauth/access_token"
  twitter.authorizationURL="https://twitter.com/oauth/authenticate"
  twitter.callbackURL="http://localhost:9000/authenticate/twitter"
  twitter.consumerKey=""
  twitter.consumerKey=${?TWITTER_CONSUMER_KEY}
  twitter.consumerSecret=""
  twitter.consumerSecret=${?TWITTER_CONSUMER_SECRET}

  # Xing provider
  xing.requestTokenURL="https://api.xing.com/v1/request_token"
  xing.accessTokenURL="https://api.xing.com/v1/access_token"
  xing.authorizationURL="https://api.xing.com/v1/authorize"
  xing.callbackURL="http://localhost:9000/authenticate/xing"
  xing.consumerKey=""
  xing.consumerKey=${?XING_CONSUMER_KEY}
  xing.consumerSecret=""
  xing.consumerSecret=${?XING_CONSUMER_SECRET}

  # Yahoo provider
  yahoo.providerURL="https://me.yahoo.com/"
  yahoo.callbackURL="http://localhost:9000/authenticate/yahoo"
  yahoo.axRequired={
    "fullname": "http://axschema.org/namePerson",
    "email": "http://axschema.org/contact/email",
    "image": "http://axschema.org/media/image/default"
  }
  yahoo.realm="http://localhost:9000"
}
